// <auto-generated />
using Doctorantura.App.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Doctorantura.App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Doctorantura.App.Models.ColumnNum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("ColumnNums");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "K1",
                            Value = 1.0
                        },
                        new
                        {
                            ID = 2,
                            Name = "K2",
                            Value = 2.0
                        },
                        new
                        {
                            ID = 3,
                            Name = "K3",
                            Value = 3.0
                        },
                        new
                        {
                            ID = 4,
                            Name = "K4",
                            Value = 3.0
                        },
                        new
                        {
                            ID = 5,
                            Name = "K5",
                            Value = 5.0
                        },
                        new
                        {
                            ID = 6,
                            Name = "K6",
                            Value = 7.0
                        },
                        new
                        {
                            ID = 7,
                            Name = "K7",
                            Value = 9.0
                        },
                        new
                        {
                            ID = 8,
                            Name = "K8",
                            Value = 9.0
                        });
                });

            modelBuilder.Entity("Doctorantura.App.Models.LineNum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColumnNumId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("ColumnNumId");

                    b.ToTable("LineNums");
                });

            modelBuilder.Entity("Doctorantura.App.Models.LineNum", b =>
                {
                    b.HasOne("Doctorantura.App.Models.ColumnNum", "ColumnNum")
                        .WithMany("LineNums")
                        .HasForeignKey("ColumnNumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
